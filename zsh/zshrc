# User configuration
source /usr/local/share/antigen/antigen.zsh
antigen bundle agkozak/zsh-z

# Tell Antigen that you're done.
antigen apply

setopt autocd cdable_vars
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt SHARE_HISTORY

hash -d si=~/Siti/
hash -d mo=~/Documents/lavoro/monema/

# You may need to manually set your language environment
 export LANG=it_IT.UTF-8

# Preferred editor for local and remote sessions
 if [[ -n $SSH_CONNECTION ]]; then
   export EDITOR='vim'
 else
   export EDITOR='nvim'
 fi
bindkey -v
bindkey -s jj '\e'
bindkey '^[[A' history-substring-search-up
bindkey '^[[B' history-substring-search-down


# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"
 alias la='ls -lAFhG'   #long list,show almost all,show type,human readable
 alias ls='ls -G'
 alias l='ls -1'
 alias python=python3


lazynvm() {
  unset -f nvm node npm
  export NVM_DIR="$HOME/.nvm"
  [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"  # This loads nvm
  [ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # Th
}

nvm() {
  lazynvm 
  nvm $@
}

node() {
  lazynvm
  node $@
}

function set-title-precmd() {
  printf "\e]2;%s\a" "${PWD/#$HOME/~}"
}

function set-title-preexec() {
  printf "\e]2;%s\a" "$1"
}

autoload -Uz add-zsh-hook
add-zsh-hook precmd set-title-precmd
add-zsh-hook preexec set-title-preexec

autoload -Uz compinit
compinit

# Completion for kitty
kitty + complete setup zsh | source /dev/stdin

autoload -U colors
colors



# Highlight the current autocomplete option
zstyle ':completion:*' list-colors "${(s.:.)LS_COLORS}"

# Better SSH/Rsync/SCP Autocomplete
[ -r ~/.ssh/config ] && _ssh_config=($(cat ~/.ssh/config | sed -ne 's/Host[=\t ]//p')) || _ssh_config=()
zstyle ':completion:*:(ssh|scp|rsync):*' hosts $_ssh_config
zstyle ':completion:*' group-name ''
zstyle ':completion:*' users ''

# Allow for autocomplete to be case insensitive
zstyle ':completion:*' matcher-list '' 'm:{[:lower:][:upper:]}={[:upper:][:lower:]}' \
  '+l:|?=** r:|?=**'



autoload -U promptinit; promptinit
#prompt pure
autoload -Uz vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' use-simple true
zstyle ':vcs_info:*' get-revision true
zstyle ':vcs_info:*' check-for-changes true
zstyle ':vcs_info:*' stagedstr "%F{green}●%f" # default 'S'
zstyle ':vcs_info:*' unstagedstr "%F{yellow}●%f" # default 'U'
zstyle ':vcs_info:git+post-backend:*' hooks git-arrows
zstyle ':vcs_info:git+set-message:*' hooks git-untracked
zstyle ':vcs_info:*' formats "%F{magenta}%b%f%m%c%u "
zstyle ':vcs_info:*' actionformats "%F{magenta}%f%b%m%c%u %a "
function +vi-git-untracked() {
  emulate -L zsh
  if [[ -n $(git ls-files --exclude-standard --others 2> /dev/null) ]]; then
    hook_com[unstaged]+="%F{red}●%f"
  fi
}

function +vi-git-arrows() {
local arrows=$($vcs rev-list --left-right --count HEAD...@'{u}' 2> /dev/null)
        local rev=("${(@z)arrows}")
        local left=$rev[1] right=$rev[2]
unset arrows
        if (( right > 0 ))
        then
            arrows+='%F{yellow}⇣%f'
        fi
        if (( left > 0 ))
        then
            arrows+='%F{green}⇡%f'
        fi

        hook_com[action]+=$arrows
        if [[ -n $(git status -s) ]]
        then
          hook_com[misc]+=' '
        fi

}
precmd() {
    vcs_info
  }
autoload -Uz add-zsh-hook
prompt_pwd() {
    if [[ $PWD = $HOME ]]; then
        psvar[1]=''
      else
        psvar[1]=$(basename $PWD)
    fi
  }
add-zsh-hook precmd prompt_pwd

setopt prompt_subst
PROMPT='%F{cyan}%v%f ${vcs_info_msg_0_}%(?..%F{yellow}! %f)%F{cyan}❯%f '
RPROMPT='%~ %F{yellow}[%T]%f'

test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"
export PATH="$PATH:$HOME/.rvm/bin:/usr/local/opt/gettext/bin:$PATH"
export PATH="/usr/local/git/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:$HOME/.config/composer/vendor/bin:/Users/andrea//Library/Python/2.7/bin"
export PATH="/usr/local/opt/php@7.1/bin:$PATH"
export PATH="/Applications/calibre.app/Contents/MacOS/:$PATH"
source /usr/local/share/zsh-history-substring-search/zsh-history-substring-search.zsh
